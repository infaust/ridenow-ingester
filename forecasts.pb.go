// Code generated by protoc-gen-go.
// source: forecasts.proto
// DO NOT EDIT!

package msw

import proto "github.com/golang/protobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Forecast struct {
	Id               *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	LocationId       *int64   `protobuf:"varint,2,opt,name=location_id" json:"location_id,omitempty"`
	WaveHeightM      *float64 `protobuf:"fixed64,3,opt,name=wave_height_m" json:"wave_height_m,omitempty"`
	SwellPeriodSecs  *float64 `protobuf:"fixed64,4,opt,name=swell_period_secs" json:"swell_period_secs,omitempty"`
	Time             *int64   `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Forecast) Reset()         { *m = Forecast{} }
func (m *Forecast) String() string { return proto.CompactTextString(m) }
func (*Forecast) ProtoMessage()    {}

func (m *Forecast) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Forecast) GetLocationId() int64 {
	if m != nil && m.LocationId != nil {
		return *m.LocationId
	}
	return 0
}

func (m *Forecast) GetWaveHeightM() float64 {
	if m != nil && m.WaveHeightM != nil {
		return *m.WaveHeightM
	}
	return 0
}

func (m *Forecast) GetSwellPeriodSecs() float64 {
	if m != nil && m.SwellPeriodSecs != nil {
		return *m.SwellPeriodSecs
	}
	return 0
}

func (m *Forecast) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func init() {
}
